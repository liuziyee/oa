<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dorohedoro.mapper.UserMapper">

    <resultMap id="baseResultMap" type="user">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="open_id" jdbcType="BIGINT" property="openId" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="tel" jdbcType="VARCHAR" property="tel" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="roles" jdbcType="VARCHAR" property="roles" />
        <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    </resultMap>
    
    <select id="isRootExist" resultType="boolean">
        select if(count(*), true, false) from user where root = 1;
    </select>
    <select id="selectPermissions" resultType="string">
        select permission_name
        from user
        join role on json_contains(user.roles, cast(role.id as char))
        join permission on json_contains(role.permissions, cast(permission.id as char))
        where user.id = #{userId} and user.status = 1;
    </select>
    
    <select id="selectByOpenId" resultType="long">
        select id from user where open_id = #{openId} and status = 1;
    </select>
    
    <select id="selectById" resultMap="baseResultMap">
        select user.id as id, open_id, nickname, avatar_url, name, sex, tel, email, roles, 
               ifnull(dept_name, '') as dept_name, group_concat(role_name separator ',') as roles
        from user
        left join dept on user.dept_id = dept.id
        left join role on json_contains(user.roles, cast(role.id as char))
        where user.id = #{userId} and user.status = 1;
    </select>
    
    <select id="selectDMId" resultType="long">
        select u2.id
        from user u1 join user u2 on u1.dept_id = u2.dept_id
        join role r on json_contains(u2.roles, cast(r.id as char))
        where u1.id = #{meetingCreatorId} and r.id = 2 and u1.status = 1 and u2.status = 1
    </select>
    
    <select id="selectGMId" resultType="long">
        select user.id
        from user join role on json_contains(user.roles, cast(role.id as char))
        where role.id = 1 and user.status = 1
    </select>
</mapper>
